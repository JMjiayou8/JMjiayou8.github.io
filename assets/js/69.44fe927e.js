(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{455:function(e,v,t){"use strict";t.r(v);var a=t(44),o=Object(a.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("总览")])]),e._v(" "),t("p",[t("code",[e._v("mxGraph")]),e._v(" 库分为 8 个包。"),t("code",[e._v("mxClient")]),e._v(" 类包括其他所有内容。当前版本存储在 "),t("code",[e._v("mxClient.VERSION")]),e._v(" 中。")]),e._v(" "),t("p",[t("code",[e._v("editor")]),e._v(" 包提供实现图编辑器所需的类。这个包中的主要类是 "),t("code",[e._v("mxEditor")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("view")]),e._v(" 和 "),t("code",[e._v("model")]),e._v(" 包实现了由 "),t("code",[e._v("mxgraph")]),e._v(" 表示的图形组件。指的是包含 "),t("code",[e._v("mxCells")]),e._v(" 并在 "),t("code",[e._v("mxGraphView")]),e._v(" 中缓存单元格状态的 "),t("code",[e._v("mxGraphModel。根据")]),e._v(" "),t("code",[e._v("mxStylesheet")]),e._v(" 中定义的外观，使用 "),t("code",[e._v("mxCellRenderer")]),e._v(" 绘制单元格。撤消历史记录在 "),t("code",[e._v("mxUndoManager")]),e._v(" 中实现。要在图形上显示图标，可以使用 "),t("code",[e._v("mxCellOverlay。验证规则是用")]),e._v(" "),t("code",[e._v("mxMultiplicity")]),e._v(" 定义的。")]),e._v(" "),t("p",[t("code",[e._v("handler")]),e._v("、"),t("code",[e._v("layout")]),e._v(" 和 "),t("code",[e._v("shape")]),e._v(" 包含事件侦听器、布局算法和形状。图形事件监听器包括用于选择的 "),t("code",[e._v("mxRubberBand、用于工具提示的")]),e._v(" "),t("code",[e._v("mxToolTipHandler")]),e._v(" 和用于基本单元修改的 "),t("code",[e._v("mxGraphHandler")]),e._v("。"),t("code",[e._v("mxCompactTreeLayout")]),e._v(" 实现了一种树布局算法，并且形状包提供了各种形状，这些形状是 "),t("code",[e._v("mxShape")]),e._v(" 的子类。")]),e._v(" "),t("p",[e._v("util 包提供实用程序类，包括用于复制粘贴的 "),t("code",[e._v("mxClipboard")]),e._v("、"),t("code",[e._v("mxDataTransfer")]),e._v(" 用于拖放、用于样式表的键和值的 "),t("code",[e._v("mxConstants")]),e._v("、用于跨浏览器事件处理和通用函数的 "),t("code",[e._v("mxEvent")]),e._v(" 和 "),t("code",[e._v("mxUtils")]),e._v("、用于国际化的 "),t("code",[e._v("mxResources")]),e._v(" 和用于控制台输出的 mxLog。")]),e._v(" "),t("p",[t("code",[e._v("io")]),e._v(" 包实现了 "),t("code",[e._v("mxObjectCodec")]),e._v(" 用于将 javascript 对象转换为 XML，主要类是 "),t("code",[e._v("mxCodec")]),e._v("。"),t("code",[e._v("mxCodeRegistry")]),e._v(" 是自定义编解码器的全局注册表。")]),e._v(" "),t("blockquote",[t("p",[e._v("事件")])]),e._v(" "),t("p",[e._v("有三种不同类型的事件，即本地 DOM 事件、在 "),t("code",[e._v("mxEventSource")]),e._v(" 中激发的 "),t("code",[e._v("mxEventObjects")]),e._v(" 和在 mxGraph 中激发的 "),t("code",[e._v("mxMouseEvents。")])]),e._v(" "),t("ul",[t("li",[e._v("mxEvent 中提供了一些用于处理本机事件的帮助程序方法。它还负责解决 dom 节点和 javascript 事件处理程序之间的循环，这可能导致 IE6 内存泄漏。")]),e._v(" "),t("li",[e._v("mxGraph 中的大多数自定义事件都是使用 "),t("code",[e._v("mxEventSource")]),e._v(" 实现的。它的侦听器是接收发送者和 "),t("code",[e._v("mxEventObject")]),e._v(" 的函数。此外，mxGraph 类会触发特殊的 "),t("code",[e._v("mxMouseEvents，这些事件是使用鼠标监听器处理的，鼠标监听器是提供")]),e._v(" mousedown、mousemove 和 mouseup 方法的对象。")]),e._v(" "),t("li",[t("code",[e._v("mxEventSource")]),e._v(" 中的事件是使用 "),t("code",[e._v("mxEventSource.fireEvent")]),e._v(" 激发的。使用 "),t("code",[e._v("mxEventSource.addListener")]),e._v(" 和 "),t("code",[e._v("mxEventSource.removeListener")]),e._v(" 添加和删除侦听器。mxGraph 中的 mxMouseEvents 使用 "),t("code",[e._v("mGgraph.fireMouseEvent")]),e._v(" 激发。分别使用 mxGraph.addMouseListener 和 mxGraph.removeMouseListener 添加和删除侦听器。")])]),e._v(" "),t("blockquote",[t("p",[e._v("Key 绑定")])]),e._v(" "),t("p",[e._v("以下键绑定是为客户端中所有浏览器和平台上的鼠标事件定义的：")]),e._v(" "),t("ul",[t("li",[e._v("Control-Drag：复制（克隆）选定的单元格")]),e._v(" "),t("li",[e._v("Shift-Rightlick：显示上下文菜单")]),e._v(" "),t("li",[e._v("Alt-Click：强制选中")]),e._v(" "),t("li",[e._v("Control-Select：切换选择状态")]),e._v(" "),t("li",[e._v("Shift-Drag：将偏移限制为一个方向")]),e._v(" "),t("li",[e._v("Shift-Control-Drag：平移（也可以移动右拖动）")])]),e._v(" "),t("blockquote",[t("p",[e._v("配置")])]),e._v(" "),t("p",[e._v("在加载客户端分别指定其语言或基路径之前定义以下全局变量")]),e._v(" "),t("ul",[t("li",[e._v("mxBasePath: 指定路径 mxClient.basePath.")]),e._v(" "),t("li",[e._v("mxImageBasePath: 指定路径 mxClient.imageBasePath.")]),e._v(" "),t("li",[e._v("mxLanguage: 指定资源的语言 mxClient.language.")]),e._v(" "),t("li",[e._v("mxDefaultLanguage: 指定默认语言 mxClient.defaultLanguage.")]),e._v(" "),t("li",[e._v("mxLoadResources: 指定是否应加载任何资源。默认 true.")]),e._v(" "),t("li",[e._v("mxLoadStylesheets: 指定是否应加载任何样式表。默认 true.")])]),e._v(" "),t("blockquote",[t("p",[e._v("保留字")])]),e._v(" "),t("ul",[t("li",[e._v("mxObjectId: If the object is used with mxObjectIdentity")]),e._v(" "),t("li",[e._v("as: If the object is a field of another object")]),e._v(" "),t("li",[e._v("id: If the object is an idref in a codec")]),e._v(" "),t("li",[e._v("mxListenerList: Added to DOM nodes when used with mxEvent")]),e._v(" "),t("li",[e._v("window.mxDynamicCode: Temporarily used to load code in Safari and Chrome (see mxClient.include).")]),e._v(" "),t("li",[e._v("mxJavaScriptExpression: Global variable that is temporarily used to evaluate code in Safari, Opera, Firefox 3 and IE (see mxUtils.eval).")])]),e._v(" "),t("blockquote",[t("p",[e._v("文件")])]),e._v(" "),t("p",[e._v("所有文件名都是相对于 mxClient.basePath 的。")]),e._v(" "),t("blockquote",[t("p",[e._v("内置图像")])]),e._v(" "),t("p",[e._v("所有图像都是从 mxClient.imageBasePath 加载的，可以更改它来反映环境。图像变量也可以单独更改。")]),e._v(" "),t("ul",[t("li",[e._v("mxGraph.prototype.collapsedImage")]),e._v(" "),t("li",[e._v("mxGraph.prototype.expandedImage")]),e._v(" "),t("li",[e._v("mxGraph.prototype.warningImage")]),e._v(" "),t("li",[e._v("mxWindow.prototype.closeImage")]),e._v(" "),t("li",[e._v("mxWindow.prototype.minimizeImage")]),e._v(" "),t("li",[e._v("mxWindow.prototype.normalizeImage")]),e._v(" "),t("li",[e._v("mxWindow.prototype.maximizeImage")]),e._v(" "),t("li",[e._v("mxWindow.prototype.resizeImage")]),e._v(" "),t("li",[e._v("mxPopupMenu.prototype.submenuImage")]),e._v(" "),t("li",[e._v("mxUtils.errorImage")]),e._v(" "),t("li",[e._v("mxConstraintHandler.prototype.pointImage")]),e._v(" "),t("li",[e._v("mxGraph.setCellWarning 中使用的警告图片的 basename 在 mxGraph.warningImage 中定义")])]),e._v(" "),t("blockquote",[t("p",[e._v("资源")])]),e._v(" "),t("p",[e._v("mxEditor 和 mxGraph 在类加载时向 mxResources 添加以下资源:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("resources/editor\\*.properties\nresources/graph\\*.properties\n")])])]),t("p",[e._v("默认情况下，库附带英语和德语资源文件。")]),e._v(" "),t("blockquote",[t("p",[e._v("图片")])]),e._v(" "),t("p",[e._v("使用图像的建议:在 HTML 元素（如工具栏和上下文菜单）中使用 GIF 图像（256 调色板），在图形组件中显示的所有图像中使用 PNG 图像（24 位）。")]),e._v(" "),t("p",[e._v("对于 HTML 元素中的 PNG 图像，Internet Explorer 将忽略任何透明度信息。")]),e._v(" "),t("p",[e._v("对于图形中的 GIF 图像，Mac 上的 Firefox 将显示奇怪的颜色。此外，Mac 上只显示动画 gif 的第一张图像。")]),e._v(" "),t("p",[e._v("为了在应用程序运行时更快地呈现图像，可以使用以下代码预取图像")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var image = new Image(); image.src = url_to_image;\n")])])]),t("blockquote",[t("p",[e._v("部署")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<script type="text/javascript" src="js/mxClient.js"><\/script>\n')])])]),t("blockquote",[t("p",[e._v("源代码")])]),e._v(" "),t("p",[e._v("必须更改 html 页面中的 mxclient.js 以引用未压缩的 mxclient.js。")]),e._v(" "),t("blockquote",[t("p",[e._v("压缩")])]),e._v(" "),t("p",[e._v("...")]),e._v(" "),t("blockquote",[t("p",[e._v("类")])]),e._v(" "),t("p",[e._v("mxGraph 中有两种类型的“类”：类和单例（其中只有一个实例）。单例映射到全局对象，其中变量名等于类名。例如，mxConstants 是一个对象，所有常量都定义为对象字段。普通类被映射到一个构造函数函数和一个定义实例字段和方法的原型。例如，mxEditor 是一个函数，mxEditor.prototype 是 mxEditor 函数创建的对象的原型。mx 前缀是一种约定，用于 mxGraph 包中的所有类，以避免与全局命名空间中的其他对象发生冲突。")]),e._v(" "),t("blockquote",[t("p",[e._v("子类")])]),e._v(" "),t("p",[e._v("对于子类，父类必须提供一个无参数的构造函数或不带参数的调用。此外，在扩展原型之后，必须重新定义特殊的构造函数字段。")]),e._v(" "),t("p",[e._v("例如")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mxEditor.prototype = new mxEventSource();\nmxEditor.prototype.constructor = mxEditor;\n")])])]),t("blockquote",[t("p",[e._v("构造函数")])]),e._v(" "),t("p",[e._v("对于 mxGraph 类的子类，首先必须为新类定义一个构造函数。构造函数使用 mxGraph 函数对象上的调用函数调用超级构造函数，并明确传递每个参数：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function MyGraph(container){\n mxGraph.call(this, container);\n}\nMyGraph.prototype = new mxGraph();\nMyGraph.prototype.constructor = MyGraph;\n")])])]),t("p",[e._v("可能希望在上述代码之后定义与类关联的 codec,此代码将在类加载时执行，并确保使用相同的编解码器对 MXgraph 和 Mygraph 的实例进行编码。")]),e._v(" "),t("blockquote",[t("p",[e._v("方法")])]),e._v(" "),t("p",[e._v("在 myGraph 原型中，mxGraph 的函数可以扩展如下:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("MyGraph.prototype.isCellSelectable = function(cell){\nvar selectable = mxGraph.prototype.isSelectable.apply(this, arguments);\nvar geo = this.model.getGeometry(cell);\n return selectable && (geo == null || !geo.relative);\n}\n")])])]),t("blockquote",[t("p",[e._v("变量")])]),e._v(" "),t("p",[e._v("一个新字段的声明和定义如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("MyGraph.prototype.myField = 'Hello, World!';\nmyGraph 的所有实例共享相同的值。如果需要特定于实例的值，则必须在构造函数中定义该字段。\nfunction MyGraph(container){\n mxGraph.call(this, container);\nthis.myField = new Array();\n}\n")])])]),t("p",[e._v("使用以下代码创建 "),t("code",[e._v("mygraph")]),e._v(" 的新实例，其中 "),t("code",[e._v("container")]),e._v(" 是充当图表视图容器的 dom 节点")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var graph = new MyGraph(container);\n")])])])])}),[],!1,null,null,null);v.default=o.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{460:function(n,e,t){"use strict";t.r(e);var a=t(44),o=Object(a.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("vue 项目中使用 axios 上传文件")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('//axios配置\nimport qs from \'qs\';\naxios.interceptors.request.use((config) => {\n  if (config.method == "post") {\n    if (config.type == \'upload\') {\n      //配置上传headers\n      config.headers[\'Content-Type\'] = \'multipart/form-data\';\n    } else {\n      //后台接受formdata格式数据,非json。用qs.stringify转换即可\n      config.data = qs.stringify(filterParamObj(config.data));\n      config.headers[\'Content-Type\'] = \'application/x-www-form-urlencoded;charset=UTF-8\';\n    }\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n//去除空值参数\nfunction filterParamObj(obj) {\n  Object.keys(obj).forEach(key => obj[key] ? null : delete obj[key])\n  return obj;\n};\n// 接口定义\nasync function addMsg(form) {\n  const res = await axios.post(`/targetMsg/add`, form, {\n    type: \'upload\'\n  })\n  return res.data;\n}\n//界面调用getFile存储文件内容\n<el-form-item label="报文模板" >\n   <div class="upload-wrap">\n     <el-button type="file" icon="iconfont icon-upload">原始报文上传</el-button>\n     <input type="file" @change="getFile($event,\'origin\')"/>\n   </div>\n   <div class="upload-wrap">\n     <el-button type="file" icon="iconfont icon-upload">目标报文上传</el-button>\n     <input type="file" @change="getFile($event,\'target\')"/>\n   </div>\n</el-form-item>\n//获取上传文件信息\ngetFile(event, key) {\n  let file = event.target.files[0];\n  this[key + "file"] = file;\n},\n//调用上传接口\nasync saveMsg(data) {\n  let self = this;\n  let formData = new FormData();\n  Object.keys(data).map(key => {\n    formData.append(key, data[`${key}`]);\n  });\n  formData.append("ORIGINAL_MSG_TEMPLATE", this.originfile);\n  formData.append("MSG_TEMPLATE", this.targetfile);\n  const res = await addMsg(formData);\n},\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);